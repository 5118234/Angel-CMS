@model SiteViewModel

@inject Angelo.Connect.UI.Routes Routes

@{
    bool advancedMode = ViewBag.UseAdvancedEditMode ?? false;
    var componentId = (string)ViewData["cid"];
    var securityPools = ViewBag.AvailableSecurityPools as IEnumerable<SelectListItem>;
    var formUrl = Routes.CorpApi(string.Format("sites/{0}", Model.Id));
}

<form id="@componentId" action="@formUrl" class="form form-horizontal"  data-ajax-form>
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ThemeId)
    @Html.HiddenFor(x => x.ClientId)
    @Html.HiddenFor(x => x.SecurityPoolId)
    @Html.HiddenFor(x => x.ClientProductAppId)
    @Html.HiddenFor(x => x.TemplateId)


    <div class="row" hide-if="ViewContext.ModelState.IsValid">
        <div class="col-sm-11">
            <div class="alert alert-danger">
                @Html.ValidationSummary(excludePropertyErrors: false)
            </div>
        </div>
    </div>

    <div class="form-group" hide-if-null="@Model.Id">
        <label class="col-sm-4">@Html.Localize("Status")</label>
        <div class="col-sm-8 checkbox">
            @*@Html.CheckBox("Published") @Html.Localize("Label.Status.Published")*@
            @(Html.Kendo().CheckBoxFor(m => m.Published)
                .Label(Html.Localize("Published").ToString())
            )
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-4">@Html.ShortNameFor(x => x.Title)</label>
        <div class="col-sm-8">

            @(Html.Kendo().TextBoxFor(model => model.Title)
                .HtmlAttributes(new { required = "required", style = "width: 80%" })
            )
            @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-4">@Html.ShortNameFor(x => x.TenantKey)</label>
        <div class="col-sm-8">

            @(Html.Kendo().TextBoxFor(model => model.TenantKey)
                .HtmlAttributes(new { required = "required", style = "width: 80%" })
            )
            @Html.ValidationMessageFor(x => x.TenantKey, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" show-if="@advancedMode==true">
        <label class="col-sm-4">@Html.ShortNameFor(x => x.SecurityPoolId)</label>
        <div class="col-sm-8">
            @Html.DropDownListFor(m => m.SecurityPoolId, securityPools, Html.Localize("Tab.Site.Details.Select.DropDownList.SecurityPool").ToString() + ":", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SecurityPoolId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            <label class="col-sm-4">@Html.Localize("Cultures")</label>
            <div class="col-sm-8">
                <div class="form-control" style="height:auto;">
                    @for (int i = 0; i < Model.Cultures.Count(); i++)
                    {
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.CheckBoxFor(m => m.Cultures[i].IsSelected)
                                @Html.HiddenFor(m => m.Cultures[i].CultureKey)
                                @Html.LabelFor(m => m.Cultures[i].IsSelected, Model.Cultures[i].DisplayName)
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    

    <div class="form-group">
        <label class="col-sm-4">@Html.Localize("Directories")</label>
        <div class="col-sm-8">
            <div class="form-control" style="height:auto;">
                @for (int i = 0; i < Model.SiteDirectories.Count(); i++)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.CheckBoxFor(m => m.SiteDirectories[i].Selected)
                            @Html.HiddenFor(m => m.SiteDirectories[i].DirectoryId)
                            @Html.HiddenFor(m => m.SiteDirectories[i].SiteId)
                            @Html.LabelFor(m => m.SiteDirectories[i].Selected, Model.SiteDirectories[i].Name)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>



 
    <div class="form-group">
        <label class="col-sm-4">@Html.ShortNameFor(x => x.DefaultCultureKey)</label>
        <div class="col-sm-8">

       
            @(Html.Kendo().DropDownList()
                      .Name("DefaultCultureKey")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .BindTo(Model.AvailableCultures)
                      .Value(Model.DefaultCultureKey)
                      .HtmlAttributes(new { style = "width: 80%" })
            )

            @Html.ValidationMessageFor(x => x.DefaultCultureKey, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group" id="theme_dropdown">
        <label class="col-sm-4">@Html.ShortNameFor(x => x.ThemeName)</label>
        <div class="col-sm-8">

            @(Html.Kendo().DropDownList()
                      .Name("ThemeId")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .BindTo(Model.AvailableThemes)
                      .Value(Model.ThemeId)
                      .HtmlAttributes(new { style = "width: 80%" })
            )


          
            @Html.ValidationMessageFor(x => x.ThemeId, "", new { @class = "text-danger" })

        </div>
    </div>*@
  
</form>
