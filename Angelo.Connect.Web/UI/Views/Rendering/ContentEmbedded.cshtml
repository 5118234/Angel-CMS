@using Angelo.Connect.UI.Extensions
@using Angelo.Connect.Rendering;
@model Angelo.Connect.Models.ContentNode
@inject Angelo.Connect.Widgets.WidgetProvider widgetProvider
@{
    var treeContext = ViewData.GetTreeContext();
    var widgetConfig = widgetProvider.GetWidgetConfig(Model.WidgetType);
    var widgetModel = widgetProvider.GetSettings(Model.WidgetType, Model.WidgetId);
    var widgetView = widgetConfig.GetViewPath(Model.ViewId);

    var nodeCssClasses = Model.BuildEmbeddedNodeCssClasses(treeContext);
    var widgetCssClasses = Model.BuildEmbeddedWidgetCssClasses(treeContext);
    var widgetCssStyle = Model.BuildWidgetCssStyle(treeContext);
}

@if (treeContext.Editable)
{
    <div id="@Model.Id"
         class="@nodeCssClasses"
         data-zone-name="@Model.Zone"
         data-zone-index="@Model.Index"
         data-widget-id="@Model.WidgetId"
         data-widget-type="@Model.WidgetType"
         data-widget-view="@Model.ViewId"
         data-widget-has-editor="@(widgetConfig.HasEditor ? "true" : "false")"
         data-widget-has-settings="@(widgetConfig.HasSettings ? "true" : "false")"
         data-node-classes="@Model.GetStyle()?.NodeClasses"
         data-max-height="@Model.GetStyle()?.MaxHeight"
         data-alignment="@Model.GetStyle()?.Alignment"
    >
        <div class="@widgetCssClasses" style="@widgetCssStyle">
            @if (widgetConfig.HasEditor)
            {
                @widgetConfig.Editor.Render(this.ViewContext, widgetModel)
            }
            else
            {
                @Html.Partial(widgetView, widgetModel)
            }    
        </div>
    </div>
}
else
{
    <div class="@nodeCssClasses">
        <div class="@widgetCssClasses" style="@widgetCssStyle">
            @Html.Partial(widgetView, widgetModel)
        </div>
    </div>
}